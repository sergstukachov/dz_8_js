// sort
// Сделайте обобщенную функцию сортировки массива
// Функция позволяет отсортировать любой набор данных по имени поля (второй параметр). 
// Третьим параметром идет необязательный Boolean, который в случае true делает сортировку по возрастанию, в случае false - по убыванию.
//  По умолчанию (без третьего параметра) происходит сортировка по возрастанию.


//  let persons = [
//     {name: "Иван", age: 17},
//     {name: "Мария", age: 35},
//     {name: "Алексей", age: 73},
//     {name: "Яков", age: 12},
// ]

// function sorting (array, parameter, sortOrder=true){array.sort((a,b)=> a[parameter] > b[parameter] ? 1 : -1); return sortOrder? array: array.reverse()}
// sorting(persons,"age",false)
// console.log(persons)

//_____________-------------------------------------------------------------------------------_________________________________________________


//array map 
// var arr =["1", {}, null, undefined, "500", 700]
// arr.map(function(el){return (typeof el=='string'? Number(el): el)})

//_______________________________________---------------------------------------------------__________________________________________________
// array reduce
// Получите произведение всех чисел в массиве, используя Array.reduce. Не обрабатывайте типы данных, не являющиеся числом.

// ["0", 5, 3, "string", null].reduce(function(accumulator, currentValue, index, array) {  return accumulator * (typeof currentValue==="number"? currentValue: 1);
// },1)


//_____________________________________--------------------------------------------________________________________________

// Рекурсия
// Sum
// Напишите функцию, который будет считать сумму арифметической прогрессии рекурсивно.
//  function sumRec(n) {
//     if (n == 1) return 1;
//     return n + sumRec(n - 1);
//   }
  
//   console.log( sumRec(100) );